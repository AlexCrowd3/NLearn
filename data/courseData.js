const courses = [
  {
    id: 'python',
    title: 'Python разработка',
    background: '#3C98E4',
    textColor: '#FFFFFF',
    imageKey: 'python_logo',
    modules: [
      // Модуль 1: Теория
      {
        title: 'Основы Python',
        topics: [
          'Что такое Python и его особенности',
          'Установка Python и сред разработки',
          'Синтаксис языка: переменные, комментарии, отступы',
          'Типы данных: int, float, str, bool',
          'Операторы сравнения и логические операторы',
          'Условные конструкции: if, elif, else',
          'Циклы: for и while',
          'Функции: создание, параметры, возврат значений',
          'Структуры данных: списки, кортежи, словари, множества',
          'Работа с файлами: чтение и запись'
        ]
      },
      // Модуль 2: Лёгкая углублённая теория
      {
        title: 'Углублённые концепции',
        topics: [
          'Что такое f-строки? Пример использования',
          'Как работает распаковка (*args, **kwargs)?',
          'Что такое lambda-функции?',
          'Как работает map() и filter()?',
          'Что такое область видимости (scope) переменных?',
          'Что делает функция range()?',
          'Что такое генератор списков?',
          'Как обработать исключение try/except?',
          'Как импортировать модуль?',
          'Что такое виртуальное окружение и зачем оно?'
        ]
      },
      // Модуль 3: Практические вопросы
      {
        title: 'Практические вопросы',
        topics: [
          'Как объявить переменную в Python?',
          'Чем отличаются списки от кортежей?',
          'Как проверить тип переменной?',
          'Для чего используется ключевое слово "def"?',
          'Что вернёт выражение: 2 + 2 * 2?',
          'Как вывести текст на экран?',
          'Как работает оператор "in"? Пример.',
          'Что такое "None"?',
          'Как прочитать содержимое файла?',
          'Как создать словарь? Пример.'
        ]
      }
    ],
  },
  {
    id: 'js-basic',
    title: 'JavaScript разработка',
    background: '#F0DB4F',
    textColor: '#323330',
    imageKey: 'javascript_logo',
    modules: [
      // Модуль 1: Теория
      {
        title: 'Основы JavaScript',
        topics: [
          'Что такое JavaScript и его роль во фронтенде',
          'Как подключить JS к HTML',
          'Синтаксис: переменные (var, let, const)',
          'Типы данных: string, number, boolean, null, undefined, object, symbol',
          'Операторы сравнения и логические операторы',
          'Условные конструкции: if, else, switch',
          'Циклы: for, while, do...while',
          'Функции: объявление, параметры, return',
          'Объекты и массивы: основы работы',
          'Работа с консолью: console.log(), alert(), prompt()'
        ]
      },
      // Модуль 2: Лёгкая углублённая теория
      {
        title: 'Углублённые концепции',
        topics: [
          'Что такое область видимости (scope)?',
          'Что такое замыкание? Пример.',
          'Как работают стрелочные функции?',
          'Что такое callback-функция?',
          'Как работает метод map() у массива?',
          'Что такое JSON и как его использовать?',
          'Как работает деструктуризация объектов и массивов?',
          'Что такое spread-оператор? Пример.',
          'Как обработать ошибку через try/catch?',
          'Что такое хостинг (hoisting)?'
        ]
      },
      // Модуль 3: Практические вопросы
      {
        title: 'Практические вопросы',
        topics: [
          'Как объявить переменную в JS?',
          'Чем отличаются var, let и const?',
          'Как проверить тип переменной?',
          'Как вывести сообщение пользователю?',
          'Что вернёт выражение: 5 + "5"?',
          'Как работает typeof? Пример.',
          'Как добавить элемент в массив?',
          'Что такое NaN?',
          'Как получить длину строки?',
          'Для чего используется оператор "==="?'
        ]
      }
    ]
  },
  {
    id: 'cpp-basic',
    title: 'C++ разработка',
    background: '#005AAD',
    textColor: '#FFFFFF',
    imageKey: 'cpp_logo',
    modules: [
        // Модуль 1: Основы C++
        {
        title: 'Основы C++',
        topics: [
            'Что такое C++ и его особенности',
            'Установка компилятора и IDE (Visual Studio, Code::Blocks, CLion)',
            'Первая программа: Hello World',
            'Типы данных: int, float, double, char, bool',
            'Переменные и константы',
            'Операторы ввода и вывода (cin, cout)',
            'Пространства имён (namespace)',
            'Комментарии в коде'
        ]
        },
        // Модуль 2: Условия и циклы
        {
        title: 'Условные конструкции и циклы',
        topics: [
            'Условный оператор if, else if, else',
            'Тернарный оператор',
            'Цикл while и do...while',
            'Цикл for (включая range-based for)',
            'Операторы break и continue',
            'Работа с логическими выражениями',
            'Переключатель switch-case'
        ]
        },
        // Модуль 3: Функции и область видимости
        {
        title: 'Функции и области видимости',
        topics: [
            'Объявление и определение функций',
            'Параметры и возвращаемые значения',
            'Передача по значению, по ссылке и по указателю',
            'Встроенные функции (inline)',
            'Перегрузка функций',
            'Области видимости переменных',
            'Статические переменные внутри функций'
        ]
        },
        // Модуль 4: Работа с массивами и строками
        {
        title: 'Массивы и строки',
        topics: [
            'Одномерные и многомерные массивы',
            'Символьные массивы и строки в стиле C',
            'Библиотека cstring для работы со строками',
            'Динамические массивы через new/delete',
            'STL-контейнер std::array',
            'std::vector как динамический массив',
            'Работа с элементами массивов: сортировка, поиск'
        ]
        },
        // Модуль 5: Указатели и ссылки
        {
        title: 'Указатели и ссылки',
        topics: [
            'Что такое указатель и адрес памяти',
            'Арифметика указателей',
            'Указатели и массивы',
            'Ссылки в C++',
            'Указатели vs ссылки',
            'nullptr и безопасная работа с указателями',
            'Утечки памяти и их предотвращение'
        ]
        },
        // Модуль 6: Объектно-ориентированное программирование
        {
        title: 'ООП: классы и объекты',
        topics: [
            'Классы и структуры',
            'Инкапсуляция: public, private, protected',
            'Конструкторы и деструкторы',
            'Методы класса',
            'Наследование и полиморфизм',
            'Виртуальные функции и абстрактные классы',
            'STL и принципы объектного подхода'
        ]
        },
        {
        title: "Практические вопросы",
        topics: [
            "Как объявить переменную типа int в C++?",
            "Чем отличается char от wchar_t?",
            "Как вывести текст в консоль?",
            "Как работает оператор << в cout?",
            "Что делает ключевое слово 'const'?",
            "Что такое пространство имён и зачем оно нужно?",
            "Как работает тернарный оператор?",
            "Чем отличается for от while?",
            "Что такое ссылка в C++?",
            "Как удалить динамически выделенную память?"
        ]
        }
    ]
}];

export default courses;